import java.util.Scanner;
import java.io.PrintWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.Iterator;
import java.util.*;

public class DataHandler{
  
  private Scanner dataScanner;
  private PrintWriter dataWriter;
  //private DecisionDatabase decisionDatabase;
  private MasterDatabase masterDatabase;
  
  public DataHandler(String inputFile, String outputFile, /*DecisionDatabase decision,*/ MasterDatabase master){
    try{
      dataScanner = new Scanner(new File(inputFile));
      dataWriter = new PrintWriter(outputFile);
    }
    catch(FileNotFoundException e){
      System.out.println("\nFile error, the file you have chosen does not exist!\n");
    }
    
    //decisionDatabase = decision;
    masterDatabase = master;
  }
  
  public void getData(){
    while(dataScanner.hasNextLine()){
      
      try{String name = dataScanner.nextLine().substring(6);
      String course = dataScanner.nextLine().substring(6);
      String type = dataScanner.nextLine().substring(9);
      String main = dataScanner.nextLine().substring(6);
      String addons = dataScanner.nextLine().substring(8);
      String sides = dataScanner.nextLine().substring(7);
      int prepTime = Integer.parseInt(dataScanner.nextLine().substring(6));
      int cookTime = Integer.parseInt(dataScanner.nextLine().substring(6));
      
      Recipe newR = new Recipe(name, course, type, main, addons, sides, prepTime, cookTime);
      newR.getInfo();
      if(dataScanner.hasNextLine()) dataScanner.nextLine();
      }
      catch(Exception e){
        break;
      }
    }
  }
  
  public void writeData(){
    Iterator<Map.Entry<String, ArrayList<Recipe>>> it = masterDatabase.iterator();

    while (it.hasNext()){
      Map.Entry<String, ArrayList<Recipe>> current = it.next();
      ArrayList<Recipe> list = current.getValue();
      for(int i=0; i<list.size(); i++)dataWriter.println(list.get(i).getInfo());
    }
    dataWriter.close();
        System.out.println("here");
  }
 
  public static void main(String[] args){
    FoodRules ruleBook = new FoodRules("ingredients.txt");
    DataHandler test = new DataHandler("recipe_10.txt","test.txt",/*new DecisionDatabase(ruleBook),*/ new MasterDatabase());
    test.getData();
    test.writeData();
  }
  
}